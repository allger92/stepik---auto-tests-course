# Generated by Selenium IDE C:\Users\user\test\login.py 
import pytest
import time
import json
import random
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

@pytest.fixture
def driver():
    driver = webdriver.Chrome()
    return driver
    yield driver
    driver.quit()

class TestDefaultSuite():
   # def testLogin(self):
      #  self.driver = webdriver.Chrome()
       # self.driver.set_window_size(1700, 850)
       # self.driver.implicitly_wait(10)
        #self.driver.get("https://germatsky:MmJiOTA2Y2QzMzQ0ZDAxNDJlOTBhMDZj@green-test.sr-srv.net") 
       # self.driver.find_element(By.NAME, "aItem[login]").send_keys("germatsky@seranking.com")
        #self.driver.find_element(By.NAME, "aItem[password]").send_keys("111111")
       # self.driver.find_element(By.CSS_SELECTOR, ".f_btn_title").click()
        
    def testAddProject(self):
        self.driver = webdriver.Chrome()
        self.driver.set_window_size(1700, 950)
        self.driver.implicitly_wait(10)
        self.driver.get("https://germatsky:MmJiOTA2Y2QzMzQ0ZDAxNDJlOTBhMDZj@green-test.sr-srv.net") 
        self.driver.find_element(By.NAME, "aItem[login]").send_keys("germatsky@seranking.com")
        self.driver.find_element(By.NAME, "aItem[password]").send_keys("111111")
        self.driver.find_element(By.CSS_SELECTOR, ".f_btn_title").click()
        text1 = self.driver.find_element(By.CSS_SELECTOR, "span[data-locator=\'tabs.item_0\']").text
        i1=text1.find("(")
        i2=text1.find(")")
        print(i1," ",i2)
        value1 = text1[(i1)+1:(i2)]
        print(value1) 
        name = random.choice(['oz.by','rw.by','onliner.by','menu.by'])
        self.driver.find_element(By.XPATH, "/html/body/div[1]/div[1]/div[5]/div[1]/div/div[2]/div[3]/div/div[1]/a").click()
        self.driver.find_element(By.CSS_SELECTOR, "div[data-locator=\'wizard.steps.general.fields.url_input\']").click()
        self.driver.find_element(By.CSS_SELECTOR, ".form__row:nth-child(1) .se-input-2__area").send_keys(name)
        self.driver.find_element(By.CSS_SELECTOR, "button[data-locator=\'wizard.steps.general.footer.next_step_button\']").click()
        self.driver.find_element(By.CSS_SELECTOR, "button[data-locator=\'wizard.proposition_tool.display_toggle_button\']").click()
        self.driver.find_element(By.CSS_SELECTOR, ".table__kw:nth-child(1)").click()
        self.driver.find_element(By.CSS_SELECTOR, ".table__kw:nth-child(2)").click()
        self.driver.find_element(By.CSS_SELECTOR, ".table__kw:nth-child(3)").click()
        self.driver.find_element(By.CSS_SELECTOR, "button[data-locator=\'wizard.steps.keywords.add.add_keyword_button\']").click()
        id1 = self.driver.current_url
        print(id1)
        i1=id1.find("id-")
        i2=id1.find(".site_add")
        id_site = id1[(i1)+3:(i2)]
        print(id_site)
        time.sleep(5)
        self.driver.find_element(By.CSS_SELECTOR, "button[data-locator=\'wizard.steps.keywords.footer.next_step_button\']").click()
        self.driver.find_element(By.CSS_SELECTOR, "button[data-locator=\'wizard.steps.engines.add_engines_form.add_engine_button\']").click()
        time.sleep(5)
        self.driver.find_element(By.CSS_SELECTOR, "button[data-locator=\'dropdown.button\']").click()
        self.driver.find_element(By.CSS_SELECTOR, "div[data-locator=\'dropdown.item.item.google_mobile\']").click()
        self.driver.find_element(By.CSS_SELECTOR, "button[data-locator=\'wizard.steps.engines.add_engines_form.add_engine_button\']").click()
        time.sleep(5)
        self.driver.find_element(By.CSS_SELECTOR, "button[data-locator=\'wizard.steps.engines.footer.next_step_button\']").click()
        self.driver.find_element(By.CSS_SELECTOR, "button[data-locator=\'wizard.proposition_tool.display_toggle_button\']").click()
        self.driver.find_element(By.CSS_SELECTOR, ".table__kw:nth-child(1)").click()
        self.driver.find_element(By.CSS_SELECTOR, ".table__kw:nth-child(2)").click()
        self.driver.find_element(By.CSS_SELECTOR, ".table__kw:nth-child(3)").click()
        self.driver.find_element(By.CSS_SELECTOR, "button[data-locator=\'wizard.steps.competitors.add_button\']").click()
        self.driver.find_element(By.CSS_SELECTOR, "button[data-locator=\'wizard.steps.competitors.footer.next_step_button\']").click()
        self.driver.find_element(By.CSS_SELECTOR, "button[data-locator=\'wizard.steps.analytics.footer.next_step_button\']").click()
        text2 = self.driver.find_element(By.CSS_SELECTOR, "span[data-locator=\'tabs.item_0\']").text
        i1=text2.find("(")
        i2=text2.find(")")
        print(i1," ",i2)
        value2 = text2[(i1)+1:(i2)]
        print(value2)
        assert (int(value2) - int(value1)== 1) 
        val_page = self.driver.find_element(By.XPATH, "/html/body/div[1]/div[1]/div[5]/div[2]/div/div[2]/div/div[1]/div[2]/div/div[3]/div[3]/div/div[3]/div[2]/span[2]/div/button/div/span").text
        print(val_page)
        valueProjekt = self.driver.find_element(By.XPATH, "/html/body/div[1]/div[1]/div[5]/div[2]/div/div[2]/div/div[1]/div[2]/div/div[3]/div[3]/div/div[2]/div/div[1]/div[1]/div/div/div[1]/div/span").text
        print(valueProjekt)
        ProjektValue = valueProjekt[::-1]
        print(ProjektValue)
        #i1=ProjektValue.find(")")
        i2=ProjektValue.find(" ")
        P_val=ProjektValue[1:(i2)]
        val_P = P_val[::-1]
        print(val_P)
        if (int(val_P)% int(val_page))== 0 :
            number_page = (int(val_P)//int(val_page))
        else :		
            number_page = (int(val_P)//int(val_page))+1
        locator1 = str("div[data-locator=\'switch_bar.item."+ str(number_page)+"\']")
        print(number_page)
        page = self.driver.find_element(By.CSS_SELECTOR, locator1).click()
        locator2 = str("div[data-id=\'"+ str(id_site)+"\']")
        elements = self.driver.find_elements(By.CSS_SELECTOR, locator2)
        assert len(elements) > 0
        url_audit = str("https://green-test.sr-srv.net/admin.reports.audit.site_id-"+id_site+".html")
        self.driver.get(url_audit)
        elements = self.driver.find_elements(By.ID, "noAudit")
        assert len(elements) == 0
        self.driver.get("https://green-test.sr-srv.net/admin.reports.list.html?type=scheduled")
        report = self.driver.find_element(By.XPATH, "/html/body/div[1]/div[1]/div[5]/div[2]/div/div[2]/div/div/div[2]/div/div[1]/div/div/div/div/div[2]/div/div[2]/div/table/tbody/tr[1]/td[1]/div/div/div[3]/div/div/div").text
        print(report)
        assert (report.find(name) != -1)	
		 

		
		
  
  
